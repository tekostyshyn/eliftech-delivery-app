{"version":3,"file":"static/js/541.f11880d4.chunk.js","mappings":"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","sources":["components/CartItem/CartItem.styled.js","components/CartItem/CartItem.jsx","components/CartList/CartList.styled.js","components/CartList/CartList.jsx","components/OrderForm/OrderForm.styled.js","components/OrderForm/OrderForm.jsx","pages/Cart.styled.js","pages/Cart.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  border: 2px solid #0047ab;\n  padding: 20px 0;\n  border-radius: 4px;\n  position: relative;\n`;\n\nexport const Picture = styled.img`\n  width: calc(100% / 2);\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n`;\n\nexport const Heading = styled.p`\n  font-size: 22px;\n  font-weight: 600;\n  margin-bottom: 15px;\n`;\n\nexport const AmountWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  margin-top: 40px;\n`;\n\nexport const DeleteButton = styled.p`\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  background-color: white;\n  color: #0047ab;\n\n  border: 1px solid white;\n  border-radius: 4px;\n\n  &:hover,\n  &:focus {\n    background-color: #0047ab;\n    color: white;\n  }\n\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  increaseAmount,\n  decreaseAmount,\n  deleteMeal,\n} from 'redux/selectedMealsSlice';\nimport {\n  Picture,\n  Item,\n  Text,\n  Heading,\n  AmountWrapper,\n  DeleteButton,\n} from './CartItem.styled';\nimport { ImCross } from 'react-icons/im';\n\nconst CartItem = ({ name, url, price, amount, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Picture src={url} alt={name} />\n      <div>\n        <Heading>{name}</Heading>\n        <Text>Price: {price} UAH</Text>\n        <AmountWrapper>\n          <button\n            onClick={() => {\n              dispatch(decreaseAmount(name));\n            }}\n            type=\"button\"\n          >\n            -{' '}\n          </button>\n          <Text>Amount: {amount}</Text>\n          <button\n            onClick={() => {\n              dispatch(increaseAmount(name));\n            }}\n            type=\"button\"\n          >\n            +\n          </button>\n        </AmountWrapper>\n        <DeleteButton\n          onClick={() => {\n            dispatch(deleteMeal(id));\n          }}\n          type=\"button\"\n        >\n          <ImCross />\n        </DeleteButton>\n      </div>\n    </Item>\n  );\n};\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    aligh-items: flex-start;\n    gap: 20px;\n`;","import { useSelector } from 'react-redux';\nimport { selectChosenMeals } from 'redux/selectors';\nimport CartItem from 'components/CartItem/CartItem';\nimport { List } from './CartList.styled';\n\nconst CartList = () => {\n  const chosenMeals = useSelector(selectChosenMeals);\n  return (\n    <List>\n      {chosenMeals.length > 0 &&\n        chosenMeals.map(meal => (\n          <CartItem\n            key={meal.id}\n            name={meal.name}\n            price={meal.price}\n            amount={meal.amount}\n            url={meal.url}\n            id={meal.id}\n          ></CartItem>\n        ))}\n    </List>\n  );\n};\n\nexport default CartList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 24px;\n  font-weigth: 600;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  height: 36px;\n  width: 480px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 180px;\n  height: 50px;\n  font-size: 18px;\n  font-weight: 600;\n  text-transform: uppercase;\n  background-color: #0047ab;\n  color: white;\n  border: 2px solid #0047ab;\n  border-radius: 4px;\n\n  &:hover,\n  &:focus {\n    background-color: white;\n    color: #0047ab;\n  }\n\n  &.disabled {\n    background-color: lightgray;\n    border-color: lightgray;\n    pointer-events: none;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { submitOrder } from 'redux/operations';\nimport { selectChosenMeals } from 'redux/selectors';\nimport { Label, Input, Button } from './OrderForm.styled';\n\nconst OrderForm = () => {\n  const dispatch = useDispatch();\n  const meals = useSelector(selectChosenMeals);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const phone = form.elements.phone.value;\n    const email = form.elements.email.value;\n    const address = form.elements.address.value;\n    if (meals.length > 0) {\n      dispatch(\n        submitOrder({ userInfo: { name, phone, email, address }, order: meals })\n      );\n      form.reset();\n    }\n  };\n\n  const setButtonClasses = () => {\n    if (meals.length <= 0) {\n      return 'disabled';\n    }\n    return '';\n  };\n\n  return (\n    <form onSubmit={(event) => {handleSubmit(event)}}>\n      <Label htmlFor=\"name\">Name:</Label>\n      <Input type=\"text\" id=\"name\" name=\"name\" required />\n      <Label htmlFor=\"email\">Email:</Label>\n      <Input type=\"email\" id=\"email\" name=\"email\" required />\n      <Label htmlFor=\"phone\">Phone:</Label>\n      <Input type=\"tel\" id=\"phone\" name=\"phone\" required />\n      <Label htmlFor=\"address\">Address:</Label>\n      <Input type=\"text\" id=\"address\" name=\"address\" required />\n      <Button className={setButtonClasses()} type=\"submit\">Submit order</Button>\n    </form>\n  );\n};\n\nexport default OrderForm;\n","import styled from 'styled-components';\n\nexport const PageLayout = styled.div`\n  padding-bottom: 80px;\n  position: relative;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 30px;\n`;\n\nexport const ContainerItem = styled.div`\n  width: calc((100% - 30px) / 2);\n  height: 450px;\n  background-color: white;\n  padding: 20px;\n  border: 2px solid black;\n  border-radius: 4px;\n  overflow-y: auto;\n`;\n\nexport const Message = styled.p`\n  font-size: 24px;\n  line-height: 1.36;\n`;\n\nexport const Text = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  position: absolute;\n  bottom: 10px;\n  left: 65%;\n`;","import { useSelector } from 'react-redux';\nimport { selectOrderState, selectTotalPrice } from 'redux/selectors';\nimport CartList from 'components/CartList';\nimport OrderForm from 'components/OrderForm';\nimport {\n  PageLayout,\n  Container,\n  ContainerItem,\n  Message,\n  Text,\n} from './Cart.styled';\n\nconst Cart = () => {\n  const isOrdered = useSelector(selectOrderState);\n  const totalPrice = useSelector(selectTotalPrice);\n  return (\n    <main>\n      <PageLayout>\n        <Container>\n          <ContainerItem>\n            <OrderForm />\n          </ContainerItem>\n          <ContainerItem>\n            {isOrdered && (\n              <Message>\n                You order has been submitted successfully. We will call you\n                within 15 minutes. Thank you for chosing us and have a nice day!\n              </Message>\n            )}\n            <CartList />\n          </ContainerItem>\n        </Container>\n        <Text>Total: {totalPrice} UAH</Text>\n      </PageLayout>\n    </main>\n  );\n};\n\nexport default Cart;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectAllShops = state => {\n  return state.shops.items;\n};\n\nexport const selectShopsList = createSelector([selectAllShops], shops => {\n  return shops.map(({ name, id }) => {\n    return { name, id };\n  });\n});\n\nexport const selectChosenShop = state => {\n  return state.shops.chosenShop;\n};\n\nexport const selectMeals = createSelector(\n  [selectAllShops, selectChosenShop],\n  (shops, chosenShop) => {\n    return shops.reduce((allMeals, shop) => {\n      if (shop.name === chosenShop) {\n        allMeals.push(...shop.meals);\n      }\n\n      return allMeals;\n    }, []);\n  }\n);\n\nexport const selectChosenMeals = state => {\n  return state.selectedMeals.meals;\n};\n\nexport const selectOrderState = state => {\n  return state.selectedMeals.isOrdered;\n};\n\nexport const selectTotalPrice = createSelector([selectChosenMeals], meals => {\n  return meals.reduce((totalPrice, meal) => {\n    return (totalPrice = totalPrice + Number(meal.amount) * Number(meal.price));\n  }, 0);\n});\n"],"names":["Item","styled","Picture","Text","Heading","AmountWrapper","DeleteButton","name","url","price","amount","id","dispatch","useDispatch","src","alt","onClick","decreaseAmount","type","increaseAmount","deleteMeal","List","chosenMeals","useSelector","selectChosenMeals","length","map","meal","Label","Input","Button","meals","onSubmit","event","preventDefault","form","currentTarget","elements","value","phone","email","address","submitOrder","userInfo","order","reset","handleSubmit","htmlFor","required","className","PageLayout","Container","ContainerItem","Message","isOrdered","selectOrderState","totalPrice","selectTotalPrice","selectAllShops","state","shops","items","selectShopsList","createSelector","selectChosenShop","chosenShop","selectMeals","reduce","allMeals","shop","push","selectedMeals","Number"],"sourceRoot":""}